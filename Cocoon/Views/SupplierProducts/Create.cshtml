@model G4Fit.Models.ViewModels.CreateServiceVM
@{
    Layout = "~/Views/Dashboard/Layout.cshtml";
    ViewBag.Title = "اضافه خدمه جديد";
    var Categories = ViewBag.Categories as List<G4Fit.Models.Domains.SubCategory>;
}
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-plus"></i> @ViewBag.Title</h3>
    </div>
    <div class="panel-body">
        <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
            <div class="panel panel-success">
                <div id="collapseOne" class="panel-collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        <div id="model-errors" style="display:none;">
                            <ul class="text-danger" id="ul-errors"></ul>
                            <hr />
                        </div>
                        @using (Ajax.BeginForm("Create", "SupplierServices", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnFailure = "OnFailure", LoadingElementId = "loader" }, new { enctype = "multipart/form-data" }))
                        {
                            <div class="row" style="margin:10px;">
                                <div class="col-lg-12 text-danger mb-15">
                                    <h4>&bull; بيانات الخدمه</h4>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="CategoryId" class="col-sm-5 control-label required">القسم: </label>
                                        <div class="col-sm-7">
                                            <select name="CategoryId" id="CategoryId" class="select2 form-control" required>
                                                @foreach (var category in Categories.OrderBy(w => w.Category.NameAr).ThenBy(s => s.NameAr))
                                                {
                                                    <option value="@category.Id">@category.NameAr - @category.Category.NameAr</option>
                                                }
                                            </select>
                                            @Html.ValidationMessageFor(d => d.SubCategoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="NameAr" class="col-sm-5 control-label required">اسم الخدمه بالعربى: </label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                            @Html.ValidationMessageFor(d => d.NameAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="NameEn" class="col-sm-5 control-label required">اسم الخدمه بالانجليزى:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                            @Html.ValidationMessageFor(d => d.NameEn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="DescriptionAr" class="col-sm-5 control-label">وصف الخدمه بالعربى:</label>
                                        <div class="col-sm-7">
                                            @Html.TextAreaFor(model => model.DescriptionAr, htmlAttributes: new { @class = "form-control", rows = 4 })
                                            @Html.ValidationMessageFor(d => d.DescriptionAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="DescriptionEn" class="col-sm-5 control-label">وصف الخدمه بالانجليزى:</label>
                                        <div class="col-sm-7">
                                            @Html.TextAreaFor(model => model.DescriptionEn, htmlAttributes: new { @class = "form-control", rows = 4 })
                                            @Html.ValidationMessageFor(d => d.DescriptionEn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="Price" class="col-sm-5 control-label required">سعر الخدمه:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                                <span class="input-group-addon">ريال سعودي</span>
                                            </div>
                                            @Html.ValidationMessageFor(d => d.Price, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="Images" class="col-sm-5 control-label">صور الخدمه:</label>
                                        <div class="col-sm-7">
                                            <input class="form-control" type="file" multiple name="Images" id="Images" accept="image/*" />
                                            @Html.ValidationMessageFor(d => d.Images, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px;">
                                <hr />
                                <div class="col-lg-12 text-danger mb-15">
                                    <h4>&bull; مواصفات الخدمه</h4>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="Features_0__FeatureAr" class="col-sm-2 control-label">الوان الخدمه: </label>
                                        <div class="col-sm-10">
                                            <div class="field_wrapper_color">
                                                <div>
                                                    <a href="javascript:void(0);" class="add_button_color btn btn-outline-primary my-3" title="Add field"><i class="fa fa-plus"></i> اضافه لون</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="Features_0__FeatureAr" class="col-sm-2 control-label">احجام الخدمه: </label>
                                        <div class="col-sm-10">
                                            <div class="field_wrapper_size">
                                                <div>
                                                    <a href="javascript:void(0);" class="add_button_size btn btn-outline-primary my-3" title="Add field"><i class="fa fa-plus"></i> اضافه حجم</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-success" id="add-Service-btn">اضافه الخدمه <i class="fa fa-spinner fa-spin" id="loader" style="display:none;"></i></button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("العودة", "Dashboard", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            var maxField = 15; //Input fields increment limitation
            var addButtonColor = $('.add_button_color'); //Add button selector
            var addButtonSize = $('.add_button_size'); //Add button selector
            var wrapperColor = $('.field_wrapper_color'); //Input field wrapper
            var wrapperSize = $('.field_wrapper_size'); //Input field wrapper
            var fieldHTMLColor = '<div class="my-3 row"><div class="col-sm-6"><input type="color" placeholder="اللون" required name="Colors[]" value="" class="form-control d-inline"/></div><a href="javascript:void(0);" class="remove_button_color btn btn-outline-primary d-inline mx-3" title="Remove field"><a href="javascript:void(0);" class="remove_button_color btn btn-outline-primary d-inline mx-3" title="Remove field"><i class="fa fa-minus"></i> حذف اللون</a></div>'; //New input field html
            var fieldHTMLSize = '<div class="my-3 row"><div class="col-sm-6"><input type="text" placeholder="الحجم" required name="Sizes[]" value="" class="form-control d-inline"/></div><a href="javascript:void(0);" class="remove_button_size btn btn-outline-primary d-inline mx-3" title="Remove field"><a href="javascript:void(0);" class="remove_button_size btn btn-outline-primary d-inline mx-3" title="Remove field"><i class="fa fa-minus"></i> حذف الحجم</a></div>'; //New input field html
            var ColorCounter = 1; //Initial field counter is 1
            var SizeCounter = 1; //Initial field counter is 1

            //Once add button is clicked
            $(addButtonColor).click(function () {
                //Check maximum number of input fields
                if (ColorCounter < maxField) {
                    ColorCounter++; //Increment field counter
                    $(wrapperColor).append(fieldHTMLColor); //Add field html
                }
            });

            $(addButtonSize).click(function () {
                //Check maximum number of input fields
                if (SizeCounter < maxField) {
                    SizeCounter++; //Increment field counter
                    $(wrapperSize).append(fieldHTMLSize); //Add field html
                }
            });

            //Once remove button is clicked
            $(wrapperColor).on('click', '.remove_button_color', function (e) {
                e.preventDefault();
                $(this).parent('div').remove(); //Remove field html
                ColorCounter--; //Decrement field counter
            });

            $(wrapperSize).on('click', '.remove_button_size', function (e) {
                e.preventDefault();
                $(this).parent('div').remove(); //Remove field html
                SizeCounter--; //Decrement field counter
            });
        });
    </script>

    <script type="text/javascript">
        function OnBegin() {
            $("#model-errors").hide();
            $("#ul-errors").empty();
            $("#add-Service-btn").attr("disabled", true);
        }
        function OnSuccess(results) {
            if (results.Success == true) {
                window.location.href = "/SupplierServices/Dashboard";
            }
            else {
                for (var i = 0; i < results.Errors.length; i++) {
                    $("#ul-errors").append("<li>" + results.Errors[i] + "</li>");
                }
                toastr.error("يوجد أخطاء ، برجاء المراجعه فى اعلى الصفحه");
                $("#model-errors").show();
                $("#add-Service-btn").attr("disabled", false);
                $("#cover-spin").hide();
            }

        }
        function OnFailure(data) {
            alert("حدث خطأ ما، برجاء المحاوله لاحقاً");
        }
    </script>
}
